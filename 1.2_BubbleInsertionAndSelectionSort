#include <stdio.h>

// Function to perform bubble sort
void bubbleSort(int arr[], int size) {
    for (int index = 0; index < size; index++) {                    // Loop over each element in the array
        for (int j = 0; j < size - index - 1; j++) {        // Compare each pair
            if (arr[j] > arr[j + 1]) {                 
                int temp = arr[j];                      // Swap the elements
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

// Function to perform selection sort
void selectionSort(int arr[], int size) {
    for (int index = 0; index < size - 1; index++) {                // Loop over each element in the array
        int minIndex = index;                               
        for (int j = index + 1; j < size; j++) {            // Find the actual minimum element in the unsorted part
            if (arr[j] < arr[minIndex]) {               
                minIndex = j;                           // Update the minimum index
            }
        }
        int temp = arr[minIndex];                       // Swap the found minimum element with the first element
        arr[minIndex] = arr[index];
        arr[index] = temp;
    }
}

// Function to perform insertion sort
void insertionSort(int arr[], int size) {
    for (int i = 1; i < size; i++) {                    // Loop from the second element to the end
        int key = arr[i];                               
        int j = i - 1;                                  
        while (j >= 0 && arr[j] > key) {                // Shift elements that are greater than the key
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;                               // Place the key in its correct position
    }
}

int main() {
    int arr[] = {1, 3, 9, 6, 4, 8};                     // Initialize the array
    int size = sizeof(arr) / sizeof(arr[0]);            // Calculate the size of the array
    
    selectionSort(arr, size);                           // Sort the array using selection sort but can change the function name for other uses too.
    
    for (int i = 0; i < size; i++) {                    // Print the sorted array
        printf("%d ", arr[i]);
    }

    return 0;
}
